import os
import sys
import site
from distutils.version import LooseVersion


def _update_environment(root_dir, artifact_dirs):

    for path in sys.path[:]:
        if path.startswith(root_dir + os.path.sep):
            sys.path.remove(path)

    for artifact_dir in artifact_dirs:
        sys.path.append(artifact_dir)

    pythonpath_parts = os.getenv('PYTHONPATH', '').split(os.pathsep)

    for path in pythonpath_parts[::-1]:
        if path.startswith(root_dir + os.path.sep):
            pythonpath_parts.remove(path)

    pythonpath_parts.extend(artifact_dirs)

    os.environ['PYTHONPATH'] = os.pathsep.join(
        pythonpath_parts
    )


def _list_artifact_dirs(root_dir):

    artifact_dirs = []

    if not os.path.exists(root_dir):
        return artifact_dirs

    for artifact_name in os.listdir(root_dir):

        artifact_dir = os.path.join(root_dir, artifact_name)

        versions = os.listdir(artifact_dir)
        if not versions:
            continue

        latest_version = max(versions, key=lambda x: LooseVersion(x.lstrip('v')))

        artifact_version_dir = os.path.join(artifact_dir, latest_version)

        artifact_dirs.append(artifact_version_dir)

    return artifact_dirs


def main():
    resources_dir = os.path.join(os.path.expanduser('~/.bd-pipeline'), 'resources')
    if not os.path.exists(resources_dir):
        return

    root_dir = os.path.join(resources_dir, 'python', 'artifacts')

    artifact_dirs = _list_artifact_dirs(root_dir)
    if not artifact_dirs:
        return

    _update_environment(root_dir, artifact_dirs)


main()